"use client";

import { useState, useEffect, useRef } from "react";
import Link from "next/link";
import { useTokens } from "./TokenProvider";
import { useRouter, useSearchParams } from "next/navigation";
import './premium-animations.css'; // Importation du fichier CSS externe

// Exemple de sons de pets l√©gendaires
const legendaryFarts = [
  { title: "Le Crescendo", description: "Un chef-d'≈ìuvre auditif en plusieurs mouvements symphoniques.", emoji: "üéº" },
  { title: "Le Silencieux mais Mortel", description: "Feu d'artifice olfactif sans avertissement sonore.", emoji: "üí£" },
  { title: "Le Freestyle Rappeur", description: "Improvise un rythme capricieux qui d√©fie les lois du beatboxing.", emoji: "üéôÔ∏è" },
  { title: "L'√âcho Profond", description: "Plongez dans les abysses f√©tides de votre intestin grondeur.", emoji: "üåä" },
  { title: "Le Sous-marin P√©riscope", description: "√âmerge discr√®tement puis dispara√Æt sans laisser de trace.", emoji: "üëª" },
  { title: "Les Chaussons Dansants", description: "Tapissez le sol d'une m√©lodie flatulente fascinante.", emoji: "üíÉ" },
  { title: "Le D√©compte Lunaire", description: "Un compte √† rebours gazeux annon√ßant l'atterrissage sur la Lune.", emoji: "üöÄ" },
  { title: "Le Tourbillon Vortex", description: "Entra√Æne tout sur son passage dans une spirale infernale.", emoji: "üåÄ" }
];

export default function Home() {
  const [sound, setSound] = useState("");
  const [place, setPlace] = useState("");
  const [duration, setDuration] = useState("");
  const [lang, setLang] = useState("fr");
  const [style, setStyle] = useState("sec");
  const [smell, setSmell] = useState("");
  const [result, setResult] = useState("");
  const [wavFile, setWavFile] = useState<File | null>(null);
  const [translations, setTranslations] = useState<any[]>([]);
  const [audioError, setAudioError] = useState(false);
  const [isTranslating, setIsTranslating] = useState(false);
  const [showConfetti, setShowConfetti] = useState(false);
  const [userMenuOpen, setUserMenuOpen] = useState(false);
  const [authMenuOpen, setAuthMenuOpen] = useState(false);
  const [currentPlayingIndex, setCurrentPlayingIndex] = useState<number | null>(null);
  const [expandedFart, setExpandedFart] = useState<number | null>(null);
  
  // √âtats pour le syst√®me de premium
  const [isPremiumLoading, setIsPremiumLoading] = useState(false);
  const [showPaymentModal, setShowPaymentModal] = useState(false);
  
  // √âtats pour l'enregistrement audio
  const [isRecording, setIsRecording] = useState(false);
  const [recordingStatus, setRecordingStatus] = useState("Pr√™t √† capturer ton pet l√©gendaire !");
  const [audioURL, setAudioURL] = useState<string | null>(null);
  const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | null>(null);
  const [audioChunks, setAudioChunks] = useState<Blob[]>([]);
  const [email, setEmail] = useState("");
  const [shouldShowPremiumBanner, setShouldShowPremiumBanner] = useState(false);
  
  const userMenuRef = useRef<HTMLDivElement>(null);
  const authMenuRef = useRef<HTMLDivElement>(null);
  const audioRef = useRef<HTMLAudioElement>(null);
  
  const { tokensRemaining, expiryTime, isPremiumActive, activatePremium } = useTokens();
  
  // Valeurs d√©riv√©es pour l'interface utilisateur premium
  const premiumActive = isPremiumActive;
  
  // Calculer le temps restant pour l'abonnement premium
  const [premiumTimeLeft, setPremiumTimeLeft] = useState<string>("");
  
  const router = useRouter();
  const searchParams = useSearchParams();
  
  useEffect(() => {
    // Forcer audioError √† false pour afficher les contr√¥les audio
    setAudioError(false);
    
    // Ajout de l'√©couteur pour fermer le menu quand on clique ailleurs
    const handleClickOutside = (event: MouseEvent) => {
      if (userMenuRef.current && !userMenuRef.current.contains(event.target as Node)) {
        setUserMenuOpen(false);
      }
      if (authMenuRef.current && !authMenuRef.current.contains(event.target as Node)) {
        setAuthMenuOpen(false);
      }
    };
    
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);

  useEffect(() => {
    // Mettre √† jour le d√©compte de temps restant pour l'abonnement premium
    if (expiryTime) {
      const updateTimeLeft = () => {
        const now = Date.now();
        const diff = expiryTime - now;
        
        if (diff <= 0) {
          setPremiumTimeLeft("Expir√©");
          return;
        }
        
        const hours = Math.floor(diff / (1000 * 60 * 60));
        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((diff % (1000 * 60)) / 1000);
        
        setPremiumTimeLeft(`${hours}h ${minutes}m ${seconds}s`);
      };
      
      updateTimeLeft();
      const interval = setInterval(updateTimeLeft, 1000);
      return () => clearInterval(interval);
    }
  }, [expiryTime]);

  const translateFart = async (isDeluxe: boolean) => {
    if (!style) {
      setResult("Choisis au moins comment √©tait ton pet, feignasse !");
      return;
    }

    // D√©sactiver explicitement le bandeau premium pendant la traduction
    setShouldShowPremiumBanner(false);
    setIsTranslating(true);
    setResult("√áa traduit, attends, p√©teur !");

    try {
      // Construire l'URL avec les param√®tres
      const params = new URLSearchParams({
        sound: sound || 'prrrt',
        place: place || 'inconnu',
        duration: duration || '1',
        style: style || 'classique'
      });

      if (isDeluxe) {
        // Option Premium - Redirection vers analyse-deluxe
        // Sauvegarder l'audio si disponible
        if (audioChunks.length > 0) {
          const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
          const reader = new FileReader();
          reader.readAsDataURL(audioBlob);
          reader.onloadend = () => {
            const base64data = reader.result as string;
            localStorage.setItem('recordedAudio', base64data);
            router.push(`/analyse-deluxe?${params.toString()}`);
          };
        } else if (wavFile) {
          const reader = new FileReader();
          reader.readAsDataURL(wavFile);
          reader.onloadend = () => {
            const base64data = reader.result as string;
            localStorage.setItem('recordedAudio', base64data);
            router.push(`/analyse-deluxe?${params.toString()}`);
          };
        } else {
          router.push(`/analyse-deluxe?${params.toString()}`);
        }
      } else {
        // Analyse gratuite - Appel √† l'API Mistral pour une analyse simple
        // Affichage du r√©sultat directement sur la page
        const response = await fetch('/api/mistral', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            type: 'basic-analysis',
            params: {
              sound: sound || 'prrrt',
              place: place || 'inconnu',
              duration: duration || '1',
              style: style,
              smell: smell || ''
            },
          }),
        });
        
        if (!response.ok) {
          throw new Error("Erreur lors de l'analyse");
        }
        
        const data = await response.json();
        
        // R√©duire le texte de 50% pour la version gratuite
        let shortenedAnalysis = data.analysis;
        if (shortenedAnalysis && shortenedAnalysis.length > 0) {
          // Diviser le texte en phrases
          const sentences = shortenedAnalysis.match(/[^\.!\?]+[\.!\?]+/g) || [shortenedAnalysis];
          
          // Prendre 60% des phrases au lieu de 50% (arrondies au sup√©rieur) pour un texte 10% plus long
          const selectedLength = Math.ceil(sentences.length * 0.6);
          const selectedSentences = sentences.slice(0, selectedLength);
          
          // Reconstruire le texte avec les phrases s√©lectionn√©es - sans ajouter de message promotionnel
          shortenedAnalysis = selectedSentences.join(' ');
        }
        
        // Animation de frappe de texte - VERSION SANS ANIMATION
        const text = shortenedAnalysis;
        
        // Afficher tout le texte imm√©diatement sans animation
        setResult(text);
        
        // Activer le bandeau premium apr√®s l'affichage du r√©sultat
        setTimeout(() => {
          setShouldShowPremiumBanner(true);
        }, 500);
        
        setIsTranslating(false);
      }
    } catch (error) {
      console.error("Erreur lors de la traduction:", error);
      setResult("Oups, ton pet a provoqu√© une erreur ! R√©essaie !");
      setIsTranslating(false);
    }
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      const file = e.target.files[0];
      setWavFile(file);
      
      // Convertir le fichier en base64 pour le stockage
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = () => {
        const base64data = reader.result as string;
        localStorage.setItem('recordedAudio', base64data);
        
        // Cr√©er une URL pour la pr√©visualisation
        const audioUrl = URL.createObjectURL(file);
        setAudioURL(audioUrl);
      };
    }
  };

  const handleAudioError = () => {
    setAudioError(true);
  };

  const getLanguageText = () => {
    return lang === "fr" ? "Fran√ßais" : lang === "en" ? "English" : "Deutsch";
  };
  
  const getRandomEmoji = () => {
    const emojis = ["üí®", "üí≠", "üå™Ô∏è", "üí•", "üîä", "üå¨Ô∏è", "üß™", "‚ú®", "üåü", "üí´"];
    return emojis[Math.floor(Math.random() * emojis.length)];
  };

  // Fonctions pour l'enregistrement audio
  const startRecording = async () => {
    try {
      // R√©initialiser les erreurs possibles
      setAudioError(false);
      
      // R√©initialiser les chunks audio existants
      setAudioChunks([]);
      
      // V√©rifier si l'API est disponible
      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
        throw new Error("L'API d'enregistrement n'est pas disponible dans ton navigateur");
      }
      
      // Demander l'acc√®s au micro avec des contraintes sp√©cifiques
      const stream = await navigator.mediaDevices.getUserMedia({ 
        audio: {
          echoCancellation: true,
          noiseSuppression: true,
          autoGainControl: false
        } 
      });
      
      setRecordingStatus("‚úÖ Enregistrement en cours...");
      
      // Cr√©er le MediaRecorder avec un type MIME pour la compatibilit√© maximale
      let options = {};
      if (MediaRecorder.isTypeSupported('audio/webm')) {
        options = { mimeType: 'audio/webm' };
      } else if (MediaRecorder.isTypeSupported('audio/mp4')) {
        options = { mimeType: 'audio/mp4' };
      } else if (MediaRecorder.isTypeSupported('audio/ogg')) {
        options = { mimeType: 'audio/ogg' };
      }
      
      console.log("Options MediaRecorder:", options);
      const recorder = new MediaRecorder(stream, options);
      
      // Stockage temporaire des chunks audio dans une variable locale
      let tempChunks: Blob[] = [];
      
      setMediaRecorder(recorder);
      
      recorder.onstart = () => {
        console.log("Enregistrement d√©marr√© avec succ√®s");
        setIsRecording(true);
        tempChunks = []; // R√©initialiser les chunks locaux
      };
      
      recorder.ondataavailable = (e) => {
        if (e.data && e.data.size > 0) {
          console.log("Donn√©es audio re√ßues:", e.data.size, "bytes");
          // Ajouter √† la fois √† notre variable temporaire et √† l'√©tat
          tempChunks.push(e.data);
          setAudioChunks(chunks => [...chunks, e.data]);
        }
      };
      
      recorder.onerror = (e) => {
        console.error("Erreur d'enregistrement:", e);
        setRecordingStatus("‚ùå Erreur d'enregistrement");
        setIsRecording(false);
      };
      
      recorder.onstop = () => {
        console.log("Arr√™t de l'enregistrement, chunks disponibles:", tempChunks.length);
        
        // S'assurer qu'il y a des donn√©es en v√©rifiant notre variable locale
        if (tempChunks.length === 0) {
          console.error("Aucune donn√©e audio n'a √©t√© captur√©e");
          setRecordingStatus("‚ùå Aucun son captur√©, r√©essaie");
          return;
        }
        
        // Ajouter un d√©lai avant de cr√©er le blob pour s'assurer que tous les chunks sont arriv√©s
        setTimeout(() => {
          // Cr√©er un blob avec le type correct et la variable locale qui garantit que nous avons les donn√©es
          const audioBlob = new Blob(tempChunks, { type: recorder.mimeType || 'audio/webm' });
          
          if (audioBlob.size === 0) {
            console.error("Blob audio vide");
            setRecordingStatus("‚ùå Enregistrement vide, r√©essaie");
            return;
          }
          
          console.log("Taille du blob:", audioBlob.size, "bytes, mime:", recorder.mimeType);
          
          // Cr√©er l'URL et mettre √† jour l'√©tat
          const audioUrl = URL.createObjectURL(audioBlob);
          setAudioURL(audioUrl);
          setIsRecording(false);
          setRecordingStatus("‚úÖ Enregistrement termin√© !");
          
          // Arr√™ter toutes les pistes pour lib√©rer le micro
          stream.getTracks().forEach(track => track.stop());
          
          // Convertir le blob en base64 pour le stockage
          const reader = new FileReader();
          reader.onloadstart = () => console.log("D√©but de lecture du fichier");
          reader.onprogress = (e) => console.log("Progression:", e.loaded, "/", e.total);
          reader.onerror = (e) => console.error("Erreur de lecture:", e);
          
          reader.onloadend = () => {
            if (reader.result) {
              console.log("Convertie en base64, taille:", (reader.result as string).length);
              const base64data = reader.result as string;
              
              // Stocker dans localStorage pour qu'il soit accessible dans analyse-deluxe
              try {
                localStorage.setItem('recordedAudio', base64data);
                console.log("Audio stock√© dans localStorage");
              } catch (e) {
                console.error("Erreur de stockage dans localStorage:", e);
              }
              
              // Convertir le blob en fichier pour pouvoir l'utiliser avec l'API existante
              const file = new File([audioBlob], "recorded-pet.webm", { type: recorder.mimeType || 'audio/webm' });
              setWavFile(file);
              console.log("Fichier cr√©√©:", file.name, file.size, "bytes");
            } else {
              console.error("La conversion en base64 a √©chou√©");
            }
          };
          
          reader.readAsDataURL(audioBlob);
        }, 500); // Attendre 500ms pour s'assurer que les donn√©es arrivent
      };
      
      // D√©marrer l'enregistrement avec des timeslices plus grands
      recorder.start(1000); // Capture les donn√©es toutes les 1000ms (1 seconde)
      console.log("Enregistrement d√©marr√©");
      
    } catch (error) {
      console.error('Erreur d\'acc√®s au microphone:', error);
      setRecordingStatus(`‚ùå Erreur: ${error instanceof Error ? error.message : "Acc√®s microphone refus√©"}`);
      setAudioError(true);
    }
  };
  
  const stopRecording = () => {
    if (mediaRecorder && isRecording) {
      console.log("Arr√™t de l'enregistrement demand√©");
      try {
        // Forcer une derni√®re capture de donn√©es avant d'arr√™ter
        mediaRecorder.requestData();
        
        // Petit d√©lai pour permettre aux donn√©es d'√™tre captur√©es
        setTimeout(() => {
          mediaRecorder.stop();
        }, 200);
        
      } catch (e) {
        console.error("Erreur lors de l'arr√™t de l'enregistrement:", e);
        setRecordingStatus("‚ùå Erreur lors de l'arr√™t de l'enregistrement");
      }
    } else {
      console.warn("Impossible d'arr√™ter: aucun enregistrement en cours");
    }
  };
  
  const cancelRecording = () => {
    if (mediaRecorder && isRecording) {
      mediaRecorder.stop();
      setAudioURL(null);
      setWavFile(null);
      setRecordingStatus("Enregistrement annul√©. R√©essaye !");
    }
  };
  
  const resetAudio = () => {
    setAudioURL(null);
    setWavFile(null);
    setRecordingStatus("Pr√™t √† capturer ton pet l√©gendaire !");
  };

  // Ajouter un useEffect pour initialiser l'audio lorsque l'URL change
  useEffect(() => {
    if (audioURL && audioRef.current) {
      audioRef.current.load();
    }
  }, [audioURL]);

  // Fonction pour g√©rer l'activation du premium
  const handlePremiumActivation = () => {
    console.log("Bouton premium cliqu√©");
    
    // Rediriger directement vers analyse-deluxe avec les param√®tres
    const url = `/analyse-deluxe?sound=${encodeURIComponent(sound)}&place=${encodeURIComponent(place)}&duration=${encodeURIComponent(duration)}&style=${encodeURIComponent(style)}${email ? `&email=${encodeURIComponent(email)}` : ''}`;
    
    // Sauvegarder l'audio si disponible
    if (audioChunks.length > 0) {
      console.log("Enregistrement audio d√©tect√©, conversion avant redirection...");
      // S'assurer d'avoir le bon type MIME
      const mimeType = mediaRecorder?.mimeType || 'audio/webm';
      const audioBlob = new Blob(audioChunks, { type: mimeType });
      
      if (audioBlob.size > 0) {
        console.log(`Conversion du blob audio (${audioBlob.size} bytes) en base64...`);
        const reader = new FileReader();
        reader.onloadend = () => {
          if (reader.result) {
            const base64data = reader.result as string;
            console.log(`Audio converti en base64: ${base64data.substring(0, 50)}... (${base64data.length} caract√®res)`);
            
            // Vider d'abord le localStorage pour √©viter les probl√®mes
            localStorage.removeItem('recordedAudio');
            
            // Stocker dans localStorage
            try {
              localStorage.setItem('recordedAudio', base64data);
              console.log("Audio stock√© dans localStorage avec succ√®s");
              
              // Attendre un court instant pour s'assurer que les donn√©es sont √©crites
              setTimeout(() => {
                // V√©rification que les donn√©es sont bien stock√©es
                const stored = localStorage.getItem('recordedAudio');
                if (stored && stored.length > 0) {
                  console.log(`V√©rifi√©: audio stock√© correctement (${stored.length} caract√®res)`);
                  window.location.href = url;
                } else {
                  console.error("√âchec de stockage dans localStorage");
                  alert("Erreur lors du stockage de l'enregistrement audio. Essayez de r√©duire la dur√©e de l'enregistrement.");
                }
              }, 100);
            } catch (e) {
              console.error("Erreur de stockage dans localStorage:", e);
              alert("Erreur lors du stockage de l'enregistrement audio: " + (e instanceof Error ? e.message : "Erreur inconnue"));
              window.location.href = url; // Rediriger quand m√™me
            }
          } else {
            console.error("La conversion en base64 a √©chou√©");
            window.location.href = url; // Rediriger quand m√™me
          }
        };
        
        reader.onerror = (error) => {
          console.error("Erreur lors de la lecture du fichier:", error);
          window.location.href = url; // Rediriger quand m√™me
        };
        
        reader.readAsDataURL(audioBlob);
      } else {
        console.warn("Blob audio vide, redirection sans audio");
        window.location.href = url;
      }
    } else if (wavFile) {
      console.log("Fichier audio import√© d√©tect√©, conversion avant redirection...");
      const reader = new FileReader();
      reader.onloadend = () => {
        if (reader.result) {
          const base64data = reader.result as string;
          console.log(`Fichier audio converti en base64: ${base64data.substring(0, 50)}... (${base64data.length} caract√®res)`);
          
          // Vider d'abord le localStorage pour √©viter les probl√®mes
          localStorage.removeItem('recordedAudio');
          
          try {
            localStorage.setItem('recordedAudio', base64data);
            console.log("Fichier audio stock√© dans localStorage avec succ√®s");
            window.location.href = url;
          } catch (e) {
            console.error("Erreur de stockage du fichier dans localStorage:", e);
            alert("Erreur lors du stockage du fichier audio. Il est peut-√™tre trop volumineux.");
            window.location.href = url; // Rediriger quand m√™me
          }
        } else {
          console.error("La conversion du fichier en base64 a √©chou√©");
          window.location.href = url; // Rediriger quand m√™me
        }
      };
      reader.readAsDataURL(wavFile);
    } else {
      console.log("Aucun audio d√©tect√©, redirection simple");
      window.location.href = url;
    }
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center p-6 relative overflow-hidden">
      {/* Image de fond */}
      <div className="fixed inset-0 z-0">
        <div className="absolute inset-0 bg-cover bg-center bg-no-repeat" style={{ backgroundImage: 'url("/images/accueil.png")' }}></div>
        <div className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"></div>
      </div>
      
      {/* Menu de navigation */}
      <nav className="w-full max-w-4xl flex flex-col justify-between items-center mb-8 relative z-10">
        {/* Menu principal et authentification sur une ligne */}
        <div className="w-full flex justify-between items-center mb-6">
          {/* Menu principal */}
          <div className="flex flex-wrap gap-3 ml-2 sm:ml-12 justify-center">
            <Link
              href="/dictionary"
              className="bg-blue-600 text-white px-3 py-2 rounded-lg font-medium hover:bg-blue-700 transition duration-300 flex items-center gap-1 shadow-lg text-sm"
            >
              <span className="mr-1">üìö</span> Dictionnaire
            </Link>
            <Link
              href="/forum"
              className="bg-yellow-600 text-white px-3 py-2 rounded-lg font-medium hover:bg-yellow-700 transition duration-300 flex items-center gap-1 shadow-lg text-sm"
            >
              <span className="mr-1">üí¨</span> Forum
            </Link>
            <Link
              href="/foods"
              className="bg-red-600 text-white px-3 py-2 rounded-lg font-medium hover:bg-red-700 transition duration-300 flex items-center gap-1 shadow-lg text-sm"
            >
              <span className="mr-1">üç≤</span> Aliments
            </Link>
            <a
              href="mailto:contact@traducteurdepets.com"
              className="bg-[#FF4500] text-white px-3 py-2 rounded-lg font-medium hover:bg-orange-700 transition duration-300 flex items-center gap-1 shadow-lg text-sm"
            >
              <span className="mr-1">üìß</span> Suggestions ou remarques ? Contactez-nous !
            </a>
          </div>
          
          {/* S√©lection de langue uniquement */}
          <div className="flex items-center gap-3 sm:gap-7">
            <select
              value={lang}
              onChange={(e) => setLang(e.target.value)}
              className="px-2 py-1.5 border-2 border-orange-400 rounded-lg bg-yellow-100 text-orange-800 focus:outline-none focus:border-orange-600 text-sm font-medium"
            >
              <option value="fr">üá´üá∑ FR</option>
              <option value="en">üá¨üáß EN</option>
              <option value="de">üá©üá™ DE</option>
            </select>
          </div>
        </div>
        
        {/* Logo et titre en dessous */}
        <div className="w-full flex justify-center mt-6">
          <h1 className="text-5xl font-extrabold text-white drop-shadow-[0_3px_5px_rgba(0,0,0,1)] [text-shadow:_0_0_15px_rgb(255_255_255_/_70%),_0_0_8px_rgb(255_255_255_/_50%)]">
            Traducteur de Pets <span className="text-5xl animate-pulse-fast inline-block transform rotate-12">üí®</span>
          </h1>
        </div>
      </nav>

      <div className="relative z-10 w-full">
        <p className="text-center text-white text-xl sm:text-2xl font-bold mb-4 italic drop-shadow-[0_2px_4px_rgba(0,0,0,0.8)]">
          Fais p√©ter ton chef-d'≈ìuvre !
        </p>
      </div>
      
      {/* Nouvelle structure en deux colonnes sur √©crans larges */}
      <div className="w-full max-w-5xl flex flex-row gap-4 md:gap-6">
        {/* Formulaire (colonne gauche sur √©crans larges) */}
        <div className="w-1/2 bg-gradient-to-br from-white to-yellow-100 bg-opacity-90 p-4 sm:p-5 rounded-2xl shadow-2xl transform hover:scale-102 transition-transform duration-300 border-4 border-double border-yellow-400 relative overflow-hidden z-10" style={{ height: '950px' }}>
          <div className="absolute -top-6 -left-6 bg-red-500 text-white w-16 h-16 rounded-full flex items-center justify-center transform rotate-12 shadow-lg border-4 border-white">
            <span className="text-2xl font-bold">TOP</span>
          </div>
          
          <div className="absolute -bottom-5 -right-5 bg-orange-500 text-white w-20 h-20 rounded-full flex items-center justify-center transform -rotate-12 shadow-lg border-4 border-white overflow-hidden">
            <div className="text-xl font-bold animate-spin-slow">üí®</div>
          </div>
          
          <div className="absolute top-0 left-0 w-full h-full bg-gradient-to-br from-yellow-50 to-transparent opacity-50 pointer-events-none"></div>
          
          <h2 className="text-2xl font-bold text-orange-800 mb-3 text-center italic relative px-4">
            <span className="relative inline-block">
              D√©cris ton pet, nous te dirons ce qu'il signifie ! üßô‚Äç‚ôÇÔ∏è
              <span className="absolute -bottom-1 left-0 w-full h-1 bg-orange-400 rounded-full"></span>
            </span>
          </h2>

          <div className="flex-grow space-y-2">
            {/* Champ obligatoire "Comment √©tait-il ?" */}
            <div className="mb-2 relative">
              <label className="block text-orange-800 font-bold mb-1 flex items-center text-sm">
                <span className="text-lg mr-2">üí≠</span> Comment √©tait-il ? <span className="ml-1 text-red-500 text-xs">* Requis</span>
              </label>
              <select
                value={style}
                onChange={(e) => setStyle(e.target.value)}
                className={`w-full p-2 border-2 ${!style ? 'border-red-400' : 'border-orange-400'} rounded-lg bg-yellow-100 text-orange-800 focus:outline-none focus:border-orange-600 shadow-md hover:shadow-lg transition-shadow`}
              >
                <option value="">Choisis une option</option>
                <option value="sec">Sec</option>
                <option value="bruyant">Bruyant</option>
                <option value="foireux">Foireux</option>
                <option value="humide">Humide</option>
                <option value="explosif">Explosif</option>
              </select>
            </div>

            {/* Champs optionnels regroup√©s avec moins d'espacement */}
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
              {/* Champ optionnel "Bruit" */}
              <div className="mb-1.5 relative">
                <label className="block text-orange-800 font-bold mb-0.5 flex items-center text-sm">
                  <span className="text-lg mr-2">üîä</span> Quel bruit ? <span className="ml-1 text-gray-500 text-xs">Optionnel</span>
                </label>
                <input
                  type="text"
                  placeholder="Ex: Prouuut, Paf, Fsss"
                  value={sound}
                  onChange={(e) => setSound(e.target.value)}
                  className="w-full p-1.5 border-2 border-orange-400 rounded-lg bg-yellow-100 text-orange-800 focus:outline-none focus:border-orange-600 shadow-md hover:shadow-lg transition-shadow"
                />
              </div>
              
              {/* Champ optionnel "Lieu" */}
              <div className="mb-1.5 relative">
                <label className="block text-orange-800 font-bold mb-0.5 flex items-center text-sm">
                  <span className="text-lg mr-2">üìç</span> O√π √ßa ? <span className="ml-1 text-gray-500 text-xs">Optionnel</span>
                </label>
                <input
                  type="text"
                  placeholder="Ex: m√©tro, r√©union..."
                  value={place}
                  onChange={(e) => setPlace(e.target.value)}
                  className="w-full p-1.5 border-2 border-orange-400 rounded-lg bg-yellow-100 text-orange-800 focus:outline-none focus:border-orange-600 shadow-md hover:shadow-lg transition-shadow"
                />
              </div>
            </div>
            
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
              {/* Champ optionnel "Odeur" */}
              <div className="mb-1.5 relative">
                <label className="block text-orange-800 font-bold mb-0.5 flex items-center text-sm">
                  <span className="text-lg mr-2">üëÉ</span> Quelle odeur ? <span className="ml-1 text-gray-500 text-xs">Optionnel</span>
                </label>
                <input
                  type="text"
                  placeholder="Ex: Soufre, ≈ìuf pourri..."
                  value={smell}
                  onChange={(e) => setSmell(e.target.value)}
                  className="w-full p-1.5 border-2 border-orange-400 rounded-lg bg-yellow-100 text-orange-800 focus:outline-none focus:border-orange-600 shadow-md hover:shadow-lg transition-shadow"
                />
              </div>
              
              {/* Champ optionnel "Dur√©e" */}
              <div className="mb-1.5 relative">
                <label className="block text-orange-800 font-bold mb-0.5 flex items-center text-sm">
                  <span className="text-lg mr-2">‚è±Ô∏è</span> Dur√©e ? <span className="ml-1 text-gray-500 text-xs">Optionnel</span>
                </label>
                <input
                  type="text"
                  placeholder="Ex: 2 sec, interminable..."
                  value={duration}
                  onChange={(e) => setDuration(e.target.value)}
                  className="w-full p-1.5 border-2 border-orange-400 rounded-lg bg-yellow-100 text-orange-800 focus:outline-none focus:border-orange-600 shadow-md hover:shadow-lg transition-shadow"
                />
              </div>
            </div>
          
            {/* Champ optionnel "Audio" avec espacement r√©duit */}
            <div className="mb-0 relative">
              <label className="block text-orange-800 font-bold mb-0.5 flex items-center text-sm">
                <span className="text-lg mr-2">üé§</span> Audio <span className="ml-1 text-gray-500 text-xs">Optionnel</span>
              </label>
              
              {/* Interface d'enregistrement audio plus compacte */}
              <div className="mb-0 bg-orange-50 p-2 rounded-lg border-2 border-orange-300">
                <p className="text-orange-700 font-medium mb-1 text-sm">
                  {recordingStatus}
                </p>
                
                <div className="flex flex-wrap gap-1.5 mb-1">
                  <button
                    onClick={startRecording}
                    disabled={isRecording}
                    className="px-2 py-1 bg-green-500 text-white rounded-md text-sm font-medium hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
                  >
                    <span className="mr-1">üéôÔ∏è</span> D√©marrer
                  </button>
                  
                  <button
                    onClick={stopRecording}
                    disabled={!isRecording}
                    className="px-2 py-1 bg-red-500 text-white rounded-md text-sm font-medium hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
                  >
                    <span className="mr-1">‚èπÔ∏è</span> Arr√™ter
                  </button>
                  
                  <button
                    onClick={cancelRecording}
                    disabled={!isRecording}
                    className="px-2 py-1 bg-orange-500 text-white rounded-md text-sm font-medium hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
                  >
                    <span className="mr-1">‚ùå</span> Annuler
                  </button>
                  
                  <button
                    onClick={resetAudio}
                    disabled={isRecording || !audioURL}
                    className="px-2 py-1 bg-blue-500 text-white rounded-md text-sm font-medium hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
                  >
                    <span className="mr-1">üîÑ</span> R√©initialiser
                  </button>
                </div>
                
                {/* Lecteur audio pour pr√©visualisation */}
                {audioURL && !audioError && (
                  <div className="mt-1">
                    <audio 
                      ref={audioRef}
                      controls
                      src={audioURL}
                      onError={handleAudioError}
                      className="w-full h-6"
                    />
                  </div>
                )}
                
                {/* Alternative: importation de fichier audio */}
                <div className="mt-1">
                  <label className="text-orange-700 text-sm font-medium mb-0.5 flex items-center">
                    <span className="mr-1">üìÅ</span> Ou importe un fichier audio
                  </label>
                  <input
                    type="file"
                    accept="audio/*"
                    onChange={handleFileChange}
                    className="w-full text-sm text-orange-700 file:mr-4 file:py-1 file:px-3 file:rounded-md file:border-0 file:text-sm file:font-medium file:bg-orange-400 file:text-white hover:file:bg-orange-500"
                  />
                </div>
              </div>
            </div>
          </div>
          
          {/* Bouton Traduire */}
          <div className="mt-4 text-center">
            <button
              onClick={() => translateFart(false)}
              disabled={isTranslating || !style}
              className="bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:from-blue-600 hover:via-blue-700 hover:to-blue-800 text-white px-6 py-3 rounded-xl font-bold shadow-lg transform hover:scale-[1.02] transition-all border-2 border-blue-300 w-full max-w-md mx-auto"
            >
              {isTranslating ? (
                <span className="flex items-center justify-center">
                  <svg className="animate-spin -ml-1 mr-2 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  Analyse en cours...
                </span>
              ) : (
                <span className="flex items-center justify-center">
                  <span className="mr-2 text-xl">üîç</span> Traduire mon pet <span className="ml-1 text-blue-200 font-medium">(Gratuit)</span>
                </span>
              )}
            </button>
          </div>
          
          {/* Affichage du r√©sultat de la traduction - MAINTENANT APR√àS LE BOUTON */}
          {result && !isTranslating && (
            <div className="mt-4 p-4 bg-blue-50 rounded-lg shadow-md">
              <h3 className="text-xl font-bold text-blue-800 mb-2">R√©sultat de l'analyse :</h3>
              <div className="bg-white p-3 rounded border border-blue-200">
                <p className="text-gray-700 whitespace-pre-line">{result}</p>
              </div>
            </div>
          )}
        </div>
      
        {/* R√©sultat (colonne droite sur √©crans larges) */}
        <div className="w-1/2" style={{ height: '950px' }}>
          {/* Zone de r√©sultat - Maintenant utilis√©e uniquement pour la promotion premium */}
          <div className="bg-white bg-opacity-90 p-4 sm:p-5 rounded-2xl shadow-2xl relative" style={{ height: '950px' }}>
            {/* Affichage du r√©sultat de la traduction */}
            
            {/* Bandeau premium conditionnel */}
            {shouldShowPremiumBanner && !isTranslating && result && !premiumActive && (
              <div className="mt-6 p-4 bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 rounded-lg shadow-lg transform hover:scale-[1.02] transition-all">
                <div className="flex flex-col items-center text-white">
                  <div className="mb-2 text-xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-yellow-300 to-yellow-100">
                    ‚ú® ANALYSE PREMIUM DE LUXE ‚ú®
                  </div>
                  <p className="text-center mb-3 font-medium">
                    D√©bloquez une analyse scientifique approfondie avec graphiques, profil de personnalit√© et interpr√©tation avanc√©e par nos experts !
                  </p>
                  <div className="flex items-center space-x-2 text-yellow-200 font-bold">
                    <span className="text-2xl">1‚Ç¨</span>
                    <span className="opacity-75 text-sm line-through">5‚Ç¨</span>
                    <span className="bg-red-500 text-white text-xs px-2 py-1 rounded-full">-80%</span>
                  </div>
                  <button
                    onClick={handlePremiumActivation}
                    className="mt-3 bg-white text-indigo-700 hover:bg-yellow-100 font-bold py-2 px-6 rounded-full shadow-md transition-colors duration-300"
                  >
                    Am√©liorer mon analyse üöÄ
                  </button>
                </div>
              </div>
            )}
            
            <h2 className="text-2xl font-bold text-amber-800 mb-6 text-center mt-[25px] relative">
              <div className="absolute -top-10 left-1/2 transform -translate-x-1/2 w-44 h-44 bg-orange-300 rounded-full opacity-30 blur-3xl"></div>
              <div className="relative">
                <div className="absolute -top-7 left-0 right-0 mx-auto bg-orange-200 text-orange-700 text-xs font-bold py-1 px-3 rounded-full shadow-sm transform -rotate-2 w-max border border-orange-300">
                  MEILLEURE OFFRE üî•
                </div>
                <span className="bg-gradient-to-r from-amber-600 to-orange-600 text-transparent bg-clip-text relative inline-block">
                  <span className="absolute -inset-1 bg-orange-200 blur-sm opacity-30 rounded-lg -z-10"></span>
                  Pet-O-Matic : Analyse Premium
                </span>
                <div className="mt-2 flex justify-center items-center gap-2">
                  <span className="bg-orange-100 text-orange-700 text-sm font-bold px-2 py-0.5 rounded shadow-sm border border-orange-200">1‚Ç¨ seulement</span>
                  <span className="text-gray-500 text-xs line-through">4,99‚Ç¨</span>
                  <span className="bg-green-100 text-green-600 text-xs font-bold px-1.5 py-0.5 rounded-sm shadow-sm border border-green-200">-80%</span>
                </div>
              </div>
            </h2>
            
            {/* Section Analyse Premium en haut dans la colonne de droite */}
            <div className="mb-6 bg-gradient-to-br from-amber-100 to-amber-200 p-5 rounded-2xl shadow-xl z-10 text-gray-800 backdrop-blur-sm border border-amber-300 relative overflow-hidden">
              {/* √âl√©ments d√©coratifs en arri√®re-plan */}
              <div className="absolute -top-10 -right-10 w-40 h-40 bg-amber-300 rounded-full opacity-30 blur-2xl"></div>
              <div className="absolute bottom-0 left-5 w-20 h-20 bg-amber-400 rounded-full opacity-30 blur-xl"></div>
              
              <div className="text-center mb-4 relative">
                <p className="text-amber-700">D√©couvre l'√©tendue de notre technologie flatulologique</p>
              </div>
              
              <div className="grid grid-cols-1 gap-3">
                <div className="bg-white p-3 rounded-xl backdrop-blur-md hover:bg-amber-100 transition-all duration-300 transform hover:-translate-y-1 hover:shadow-lg border border-amber-200">
                  <h3 className="font-bold text-lg flex items-center text-amber-700">
                    <span className="mr-2 text-xl">üîä</span> √âtude Analytique Sonore
                  </h3>
                  <p className="text-sm text-gray-600">Analyse spectrale avanc√©e r√©v√©lant les harmoniques cach√©s de votre flatulence. Notre algorithme propri√©taire d√©tecte les subtilit√©s acoustiques invisibles √† l'oreille humaine.</p>
                </div>
                
                <div className="bg-white p-3 rounded-xl backdrop-blur-md hover:bg-blue-100 transition-all duration-300 transform hover:-translate-y-1 hover:shadow-lg border border-blue-200">
                  <h3 className="font-bold text-lg flex items-center text-blue-600">
                    <span className="mr-2 text-xl">üî¨</span> Analyse avec Spectrom√©trie
                  </h3>
                  <p className="text-sm text-gray-600">Cartographie mol√©culaire pr√©cise des compos√©s gazeux √©mis, avec identification de biomarqueurs exclusifs. Notre technologie d√©voile les secrets chimiques que votre intestin tente de dissimuler.</p>
                </div>
                
                <div className="bg-white p-3 rounded-xl backdrop-blur-md hover:bg-purple-100 transition-all duration-300 transform hover:-translate-y-1 hover:shadow-lg border border-purple-200">
                  <h3 className="font-bold text-lg flex items-center text-purple-600">
                    <span className="mr-2 text-xl">üìä</span> Rapport Personnalis√©
                  </h3>
                  <p className="text-sm text-gray-600">Dossier complet avec visualisations interactives, conseils di√©t√©tiques personnalis√©s et strat√©gies d'optimisation flatulente. Un v√©ritable passeport pour ma√Ætriser l'art subtil de la flatulence contr√¥l√©e.</p>
                </div>
              </div>
              
              <div className="mt-6 text-center relative">
                <div className="absolute inset-0 w-full h-full bg-gradient-to-r from-yellow-300/20 to-orange-300/20 rounded-3xl blur-xl -z-10"></div>
                <div className="relative z-10 p-2">
                  {/* Ajout d'une banni√®re promotionnelle au-dessus du bouton */}
                  <div className="mb-3 bg-red-600 text-white font-bold py-2 px-4 rounded-full transform -rotate-2 shadow-lg inline-block animate-pulse">
                    <span className="flex items-center">
                      <span className="mr-2">üî•</span> OFFRE SP√âCIALE LIMIT√âE <span className="ml-2">üî•</span>
                    </span>
                  </div>
                  
                  <div className="absolute inset-0 bg-gradient-to-r from-amber-300 to-orange-300 rounded-2xl animate-pulse-slow opacity-70 blur-md"></div>
                  <button
                    onClick={() => translateFart(true)}
                    className="bg-gradient-to-r from-amber-500 to-orange-500 text-white font-bold text-xl px-10 py-5 rounded-xl shadow-xl hover:from-amber-600 hover:to-orange-600 transition-all duration-300 transform hover:scale-105 active:scale-95 relative overflow-hidden group z-10 border-2 border-amber-300 w-full max-w-xl mx-auto"
                  >
                    {/* Ajout d'un pseudo-√©l√©ment pour un effet de brillance */}
                    <span className="absolute inset-0 w-full h-full bg-gradient-to-r from-yellow-300/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
                    {/* Ajout d'un effet de scintillement */}
                    <span className="absolute top-0 left-0 w-20 h-full bg-white/30 transform -skew-x-30 opacity-30 animate-shine"></span>
                    <span className="relative z-10 flex items-center justify-center">
                      <span className="mr-2 text-2xl">‚ú®</span>
                      Commencer mon analyse avanc√©e pour 1‚Ç¨ seulement
                      <span className="ml-2 text-2xl">‚ú®</span>
                    </span>
                  </button>
                  <div className="mt-3 text-sm font-medium text-amber-800 bg-amber-100/80 py-2 px-4 rounded-lg inline-block shadow-sm">
                    Inclut 3 analyses gratuites ‚Ä¢ Acc√®s premium pendant 24h ‚Ä¢ Satisfaction garantie
                  </div>
                </div>
              </div>
            </div>
            
            {/* Toujours afficher le contenu premium, m√™me quand il y a un r√©sultat */}
            <div className="space-y-3">
              {/* Contenu supprim√© */}
            </div>
          </div>
          
          {/* Derni√®res traductions publiques */}
          <div className="mt-4 bg-gradient-to-br from-blue-50 to-blue-100 bg-opacity-90 p-5 rounded-2xl shadow-lg flex-grow backdrop-blur-md border border-blue-200/50 relative overflow-hidden">
            <div className="absolute -bottom-16 -right-16 w-40 h-40 bg-blue-300 rounded-full opacity-20 blur-3xl"></div>
            
            <h3 className="text-lg font-bold text-blue-800 mb-3 flex items-center">
              <span className="mr-2 text-xl bg-blue-100 p-1.5 rounded-full">üåç</span> 
              <span className="bg-gradient-to-r from-blue-600 to-blue-800 text-transparent bg-clip-text">Derni√®res traductions publiques</span>
            </h3>
            
            <div className="space-y-2 max-h-60 overflow-y-auto pr-1">
              {translations.length > 0 ? (
                translations.map((t, i) => (
                  <div 
                    key={i} 
                    className="bg-white/80 backdrop-blur-sm p-3 rounded-lg border border-blue-100 text-sm hover:shadow-md transition-all duration-300 cursor-pointer transform hover:-translate-y-0.5 hover:bg-white"
                  >
                    <div className="flex justify-between items-start">
                      <div className="font-medium text-blue-700">
                        Pet {t.style}{t.sound ? ` (${t.sound})` : ''}{t.place ? ` √† ${t.place}` : ''}
                      </div>
                      <div className="text-xs text-gray-500 bg-blue-50 px-1.5 py-0.5 rounded">
                        {new Date(t.created_at).toLocaleDateString()}
                      </div>
                    </div>
                    <p className="text-gray-700 mt-1.5 line-clamp-2">
                      {t.translation}
                    </p>
                  </div>
                ))
              ) : (
                <div className="text-center py-4 text-gray-500 italic bg-white/50 rounded-lg backdrop-blur-sm">
                  <div className="text-blue-400 text-2xl mb-1">üîç</div>
                  Aucune traduction publique pour le moment
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
      
      {/* Hall of Fame des Pets L√©gendaires - Section d√©plac√©e en dehors des colonnes */}
      <div className="w-full max-w-5xl mt-3 bg-gradient-to-br from-white to-orange-50 bg-opacity-90 p-6 rounded-3xl shadow-2xl z-10 relative overflow-hidden border border-orange-200/50">
        <div className="absolute -top-20 -left-20 w-64 h-64 bg-orange-300 rounded-full opacity-20 blur-3xl"></div>
        
        <h3 className="text-xl font-bold text-orange-700 mb-4 text-center relative">
          <span className="inline-block animate-bounce-slow bg-orange-100 p-2 rounded-full shadow-md mr-2">üèÜ</span> 
          <span className="bg-gradient-to-r from-orange-600 to-amber-600 text-transparent bg-clip-text">Hall of Fame des Pets L√©gendaires</span>
        </h3>
        
        <div className="text-center text-sm text-orange-600 italic mb-5 max-w-2xl mx-auto">
          Les performances flatulentes qui ont marqu√© l'Histoire et inspir√© des g√©n√©rations de p√©teurs
          <div className="h-0.5 w-40 bg-gradient-to-r from-transparent via-orange-300 to-transparent rounded mx-auto mt-2"></div>
        </div>
        
        <div className="bg-gradient-to-r from-amber-100 to-yellow-100 p-4 rounded-xl mb-5 text-sm shadow-md backdrop-blur-sm border border-yellow-200/70">
          <p className="text-orange-800">
            <span className="font-bold">Le Mus√©e des Pets L√©gendaires</span> est le th√©√¢tre id√©al pour ces performances. Les murs, gorg√©s d'histoires flatulentes, semblent murmurer leur approbation. L'√©cho de ces exploits auditifs rebondit sur les ≈ìuvres d'art, cr√©ant une symphonie unique en son genre.
          </p>
          <p className="text-orange-700 mt-2 text-xs bg-white/50 p-2 rounded-lg inline-block">
            <em>Note scientifique</em> : Ces repr√©sentations resteront grav√©es dans les annales du monde p√©tologique. De vrais chefs-d'≈ìuvre du genre !
          </p>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {legendaryFarts.map((fart, index) => (
            <div 
              key={index}
              className="bg-gradient-to-r from-yellow-50 to-orange-50 p-4 rounded-xl border border-yellow-200 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 hover:scale-[1.01] backdrop-blur-sm"
            >
              <div className="flex items-start">
                <div className="text-3xl mr-4 animate-pulse-slow bg-gradient-to-br from-amber-100 to-yellow-100 p-3 rounded-full shadow-md">{fart.emoji}</div>
                <div className="w-full">
                  <h4 className="font-bold text-orange-800 text-lg">{fart.title}</h4>
                  <p className="text-sm text-gray-700 mb-2">{fart.description}</p>
                  
                  <div className="bg-white/70 p-3 rounded-lg border border-orange-100 shadow-sm backdrop-blur-sm">
                    {fart.title === "Le Crescendo" && (
                      <p className="text-xs text-gray-600 italic">
                        Ce style est caract√©ris√© par une augmentation progressive du volume sonore et de la fr√©quence, cr√©ant une m√©lodie singuli√®re et rythm√©e. Appr√©ci√© pour sa richesse de tonalit√©s, il est particuli√®rement impressionnant dans les espaces √† forte r√©sonance acoustique. Les vrais artistes ma√Ætrisent parfaitement la mont√©e en puissance, surprenant leur audience par une finale inattendue.
                      </p>
                    )}
                    {fart.title === "Le Silencieux mais Mortel" && (
                      <p className="text-xs text-gray-600 italic">
                        La pi√®ce ma√Ætresse du Mus√©e des Pets. Cette flatulence myst√©rieuse et discr√®te peut passer inaper√ßue auditivement, mais gare √† son parfum redoutable qui rappelle les tr√©fonds de l'enfer. Son pouvoir r√©side dans sa capacit√© √† provoquer des r√©actions en cha√Æne de recherche du coupable, cr√©ant des situations sociales d√©licieusement embarrassantes.
                      </p>
                    )}
                    {fart.title === "Le Freestyle Rappeur" && (
                      <p className="text-xs text-gray-600 italic">
                        Impr√©visible et rythmiquement complexe, le Freestyle Rappeur d√©fie toute logique acoustique. Sa s√©quence syncop√©e de petits pets rapides et de variations tonales √©voque une session d'improvisation hip-hop. Ce style n√©cessite une excellente ma√Ætrise du sphincter et une alimentation riche en fibres pour atteindre sa pleine expression artistique.
                      </p>
                    )}
                    {fart.title === "L'√âcho Profond" && (
                      <p className="text-xs text-gray-600 italic">
                        Provenant des profondeurs intestinales, l'√âcho Profond r√©sonne avec une gravit√© qui impressionne. Sa signature acoustique unique combine basses fr√©quences et r√©verb√©rations prolong√©es. Les connaisseurs appr√©cient sa capacit√© √† faire vibrer les objets environnants, produisant parfois un effet secondaire de mise en mouvement des bibelots pos√©s sur les √©tag√®res.
                      </p>
                    )}
                    {fart.title === "Le Sous-marin P√©riscope" && (
                      <p className="text-xs text-gray-600 italic">
                        Techniquement complexe √† r√©aliser, ce pet furtif fait son apparition puis dispara√Æt dans un mouvement rappelant un p√©riscope. Souvent, il commence par une l√©g√®re √©mission, suivie d'une pause strat√©gique, puis d'une seconde √©mission qui confirme sa pr√©sence. Les experts le consid√®rent comme le pet le plus √©l√©gant du r√©pertoire flatulent.
                      </p>
                    )}
                    {fart.title === "Les Chaussons Dansants" && (
                      <p className="text-xs text-gray-600 italic">
                        Cette flatulence ludique cr√©e une sensation de mouvement dans la pi√®ce. Sa caract√©ristique principale r√©side dans sa capacit√© √† sembler se d√©placer d'un point √† un autre, comme des pas de danse. Les t√©moins rapportent une impression de l√©g√®ret√© et de joie, malgr√© l'odeur parfois prononc√©e qui l'accompagne.
                      </p>
                    )}
                    {fart.title === "Le D√©compte Lunaire" && (
                      <p className="text-xs text-gray-600 italic">
                        Inspir√© des missions spatiales, ce pet se d√©roule en plusieurs phases distinctes, √† la mani√®re d'un compte √† rebours. La phase d'allumage initial est suivie d'une s√©rie de propulsions de plus en plus rapides, culminant en un final puissant. Les astronautes de la NASA auraient secr√®tement √©tudi√© ce ph√©nom√®ne pour am√©liorer leurs syst√®mes de propulsion.
                      </p>
                    )}
                    {fart.title === "Le Tourbillon Vortex" && (
                      <p className="text-xs text-gray-600 italic">
                        Ce chef-d'≈ìuvre flatulent cr√©e un v√©ritable cyclone olfactif dans son environnement. Son effet tourbillonnant est si puissant qu'il peut d√©placer les rideaux l√©gers et faire vaciller les flammes des bougies. Les scientifiques du Mus√©e des Pets ont calcul√© que sa force rotative pourrait th√©oriquement alimenter une petite √©olienne domestique.
                      </p>
                    )}
                  </div>
                  <div className="mt-2 flex justify-between items-center">
                    <p className="text-xs text-orange-500 italic">Niveau de difficult√©: {index + 3}/5</p>
                    <p className="text-xs bg-orange-100 text-orange-700 px-2 py-1 rounded-full">Popularit√©: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</p>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
        
        <div className="mt-4 text-center text-xs text-gray-500 bg-white/70 p-2 rounded-lg backdrop-blur-sm mx-auto max-w-2xl">
          * Ces l√©gendes ont √©t√© immortalis√©es par notre comit√© scientifique international apr√®s des ann√©es d'√©tudes rigoureuses dans des espaces confin√©s
        </div>
        
        <div className="mt-5 bg-gradient-to-r from-yellow-50 to-amber-50 border border-yellow-200 rounded-xl p-4 shadow-md backdrop-blur-sm">
          <p className="text-center text-sm text-yellow-800 flex items-center justify-center">
            <span className="bg-yellow-200 p-1.5 rounded-full mr-2">‚ö†Ô∏è</span>
            <span><span className="font-bold">Avertissement de s√©curit√© :</span> Dans ce Mus√©e des Pets, les flatulences peuvent atteindre des sommets historiques en termes d'odeur et de volume. Pr√©parez vos narines avec prudence et amusement !</span>
          </p>
        </div>
      </div>
    </div>
  );
}